(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"+UI2":function(e,t,n){var r=n("AeNK");"string"==typeof r&&(r=[[e.i,r,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};n("aET+")(r,a);r.locals&&(e.exports=r.locals)},"+q4Q":function(e,t,n){(e.exports=n("JPst")(!1)).push([e.i,'body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", "Roboto", "Oxygen",\n    "Ubuntu", "Cantarell", "Fira Sans", "Droid Sans", "Helvetica Neue",\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  height: 100%;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, "Courier New",\n    monospace;\n}\n',""])},"5pBT":function(e,t,n){e.exports=n.p+"2ef369ffe30166a9749bf9d4fc2430bb.png"},AeNK:function(e,t,n){(e.exports=n("JPst")(!1)).push([e.i,".header-color {\r\n  background: #833ab4; /* fallback for old browsers */\r\n  background: -webkit-linear-gradient(\r\n    to right,\r\n    #fcb045,\r\n    #fd1d1d,\r\n    #833ab4\r\n  ); /* Chrome 10-25, Safari 5.1-6 */\r\n  background: linear-gradient(\r\n    to right,\r\n    #fcb045,\r\n    #fd1d1d,\r\n    #833ab4\r\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n  /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n}\r\n\r\n.landing-grid {\r\n  background: #833ab4; /* fallback for old browsers */\r\n  background: -webkit-linear-gradient(\r\n    to right,\r\n    #fcb045,\r\n    #fd1d1d,\r\n    #833ab4\r\n  ); /* Chrome 10-25, Safari 5.1-6 */\r\n  background: linear-gradient(\r\n    to right,\r\n    #fcb045,\r\n    #fd1d1d,\r\n    #833ab4\r\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n  text-align: center;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: auto; \r\n  /* Center and scale the image nicely */\r\n}\r\n\r\n.avatar-img {\r\n  height: 250px;\r\n  padding-top: 5em;\r\n}\r\n\r\n.banner-text {\r\n  background-color: black;\r\n  opacity: 0.8;\r\n  width: 75%;\r\n  margin: auto;\r\n  border-radius: 10px;\r\n}\r\n\r\n.banner-text h1 {\r\n  font-size: 66px;\r\n  font-weight: bold;\r\n  color: white;\r\n}\r\n\r\n.banner-text hr {\r\n  border-top: 5px dotted white;\r\n  width: 50%;\r\n  margin: auto;\r\n}\r\n\r\n.banner-text p {\r\n  color: white;\r\n  font-size: 20px;\r\n  padding: 1em;\r\n}\r\n.social-links {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 50%;\r\n}\r\n\r\n.social-links i {\r\n  color: white;\r\n  font-size: 5em;\r\n  padding: 8px;\r\n}\r\n\r\n.project-grid{\r\n  display: flex;\r\n  flex-direction:row;\r\n}\r\n\r\n.card-link{\r\n  color : rgb(63,81,181);\r\n  text-decoration : none;\r\n  text-transform: none;\r\n}\r\n\r\n/* contact page css start */\r\n\r\n.contact-body{\r\n  margin: auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  justify-content: center;\r\n  padding-top: 2em;\r\n}\r\n\r\n.contact-grid{\r\n  text-align: center;\r\n  justify-content: center;\r\n  width: 80%;\r\n  height: 100%;\r\n  background: white;\r\n  color:black;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.contact-grid h2{\r\n  font-family: 'Anton', sans-serif;\r\n}\r\n\r\n.contact-grid p{\r\n  font-family: 'Oxygen', sans-serif;\r\n  font-weight: bold;\r\n}\r\n.contact-grid hr{\r\n  border-top: 5px dotted black;\r\n  width: 50%;\r\n  margin: auto;\r\n}\r\n\r\n.contact-list i{\r\n  font-size: 40px;\r\n  padding-right: 1rem;\r\n}\r\n/* contact page css end*/\r\n/* resume page css start*/\r\n.resume-left-col p{\r\n  font-family: 'Oxygen', sans-serif;\r\n}\r\n.resume-right-col{\r\n  background: #27221f;\r\n  color:white;\r\n  padding: 2em;\r\n}\r\n\r\n.resume-right-col .timeline{\r\n  font-style: italic;\r\n}\r\n\r\n.resume-right-col h5{\r\n  font-family: 'Anton', sans-serif;\r\n}\r\n.resume-right-col .description{\r\n  font-family: 'Oxygen', sans-serif;\r\n}\r\n\r\n.resume-right-col  i{\r\n  font-size: 10px;\r\n vertical-align: middle;\r\n}\r\n\r\n\r\n/* resume page css end*/",""])},"L/8m":function(e,t,n){e.exports=n.p+"5553afffe339dad699f650b2859097b7.png"},spug:function(e,t,n){var r=n("+q4Q");"string"==typeof r&&(r=[[e.i,r,""]]);var a={hmr:!0,transform:void 0,insertInto:void 0};n("aET+")(r,a);r.locals&&(e.exports=r.locals)},tjUo:function(e,t,n){"use strict";n.r(t);var r=n("q1tI"),a=n.n(r),o=n("i8i4"),l=n.n(o),i=(n("+UI2"),n("03aD")),c=n("Ty5D"),s=n("5pBT"),m=n.n(s);function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t){return!t||"object"!==u(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function d(e){return(d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function y(e,t){return(y=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var h=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),p(this,d(t).apply(this,arguments))}var n,o,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&y(e,t)}(t,r["Component"]),n=t,(o=[{key:"render",value:function(){return a.a.createElement("div",{style:{width:"100%",margin:"auto",height:"100%"}},a.a.createElement(i.Grid,{className:"landing-grid"},a.a.createElement(i.Cell,{col:12},a.a.createElement("img",{src:m.a,alt:"avatar",className:"avatar-img"}),a.a.createElement("div",{className:"banner-text"},a.a.createElement("h1",null,"Full Stack Web Developer"),a.a.createElement("hr",null),a.a.createElement("p",null,"HTML/CSS | JavaScript | React | .Net"),a.a.createElement(i.Grid,{className:"social-links"},a.a.createElement(i.Cell,{col:4},a.a.createElement("a",{href:"http:\\\\www.linkedin.com/in/yuanyaowebdeveloper",rel:"noopener noreferrer",target:"_blank"},a.a.createElement("i",{className:"fa fa-linkedin-square","aria-hidden":"true"}))),a.a.createElement(i.Cell,null,a.a.createElement("a",{href:"https://github.com/yuanyao8855",rel:"noopener noreferrer",target:"_blank"},a.a.createElement("i",{className:"fa fa-github-square","aria-hidden":"true"}))),a.a.createElement(i.Cell,null,a.a.createElement("a",{href:"https://leetcode.com/yuanyao8855",rel:"noopener noreferrer",target:"_blank"},a.a.createElement("i",{className:"fa fa-free-code-camp","aria-hidden":"true"}))))))))}}])&&f(n.prototype,o),l&&f(n,l),t}(),b=function(){return a.a.createElement("div",null,a.a.createElement("h2",null,"about me"))},g=n("L/8m"),E=n.n(g);function v(e){return(v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(e,t){return!t||"object"!==v(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function k(e){return(k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function C(e,t){return(C=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var S=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=x(this,k(t).call(this,e))).state={activeTab:0},n}var n,o,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&C(e,t)}(t,r["Component"]),n=t,(o=[{key:"toggleCategories",value:function(){return 0===this.state.activeTab?a.a.createElement(i.Grid,null,a.a.createElement(i.Cell,{col:4},a.a.createElement(i.Card,{shadow:5,style:{minWidth:"300px",margin:"auto",height:"330px"}},a.a.createElement(i.CardTitle,{style:{color:"black",height:"200px",background:"url("+E.a+") center / cover"}},"my portfolio site"),a.a.createElement(i.CardText,null,"my first react web site with Material Design Lite component"),a.a.createElement(i.CardActions,{border:!0},a.a.createElement(i.Button,{colored:!0},a.a.createElement("a",{href:"https://github.com/yuanyao8855/meetYuanWeb",rel:"noopener noreferrer",target:"_blank",className:"card-link"},"Git Repo"))))),a.a.createElement(i.Cell,{col:4},a.a.createElement(i.Card,{shadow:5,style:{minWidth:"300px",margin:"auto",height:"330px"}},a.a.createElement(i.CardTitle,{style:{color:"black",height:"200px",background:"url("+E.a+") center / cover"}},"React with redux project"),a.a.createElement(i.CardText,null,"building"),a.a.createElement(i.CardActions,{border:!0},a.a.createElement(i.Button,{colored:!0},a.a.createElement("a",{href:"https://github.com/yuanyao8855/reduxexample",rel:"noopener noreferrer",target:"_blank",className:"card-link"},"Git Repo")))))):1===this.state.activeTab?a.a.createElement("div",null,a.a.createElement("h1",null,".Net Core with Docker")):2===this.state.activeTab?a.a.createElement("div",null,a.a.createElement("h1",null,"Flask web api in heroku")):void 0}},{key:"render",value:function(){var e=this;return a.a.createElement("div",{className:"category-tabs"},a.a.createElement(i.Tabs,{activeTab:this.state.activeTab,onChange:function(t){return e.setState({activeTab:t})},ripple:!0},a.a.createElement(i.Tab,null,"React"),a.a.createElement(i.Tab,null,".Net Core"),a.a.createElement(i.Tab,null,"Flask")),a.a.createElement("section",null,a.a.createElement("div",{className:"content"},this.toggleCategories())))}}])&&w(n.prototype,o),l&&w(n,l),t}(),N=function(e){var t=e.eduHistory;return a.a.createElement(i.Grid,null,a.a.createElement(i.Cell,{col:4},a.a.createElement("p",{className:"timeline"},t.start," - ",t.end)),a.a.createElement(i.Cell,{col:8},a.a.createElement("h5",{style:{marginTop:"0px"}},t.degree," - ",t.schoolName,","," ",t.schoolAddress)))},j=function(e){var t=e.empHistory;return a.a.createElement(i.Grid,null,a.a.createElement(i.Cell,{col:4},a.a.createElement("p",{className:"timeline"},t.start," - ",t.end," "),a.a.createElement("h5",null,t.companyName," "),a.a.createElement("p",null,t.title," ")),a.a.createElement(i.Cell,{col:8},a.a.createElement("ul",{className:"fa-ul",style:{marginTop:"0px"}},t.jobDetail.map(function(e){return a.a.createElement("li",{key:e.id},a.a.createElement("span",{className:"fa-li"},a.a.createElement("i",{className:"fa fa-circle","aria-hidden":"true"})),a.a.createElement("span",{className:"description"}),e.des)}),a.a.createElement("li",null,a.a.createElement("span",{className:"fa-li"},a.a.createElement("i",{className:"fa fa-code","aria-hidden":"true"})),a.a.createElement("span",{className:"description"}),t.techStack))))},O=function(e){var t=e.skillName,n=e.years;return a.a.createElement("div",{style:{display:"flex"}},a.a.createElement("span",{style:{width:"90px"}},t),a.a.createElement(i.ProgressBar,{style:{margin:"auto",width:"60%"},progress:n/6*100}),a.a.createElement("span",null,n," years"))};function T(e){return(T="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(e){return(P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function H(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function I(e,t){return(I=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var D=function(e){function t(){var e,n,r,a,o,l,i;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);for(var c=arguments.length,s=new Array(c),m=0;m<c;m++)s[m]=arguments[m];return r=this,n=!(a=(e=P(t)).call.apply(e,[this].concat(s)))||"object"!==T(a)&&"function"!=typeof a?H(r):a,o=H(n),i={eduHistory:[{start:2010,end:2012,degree:"M.S. EE",schoolName:"George Washington University",schoolAddress:"Washington D.C.",id:1},{start:2010,end:2012,degree:"B.S. EE",schoolName:"Nanjing University of Post and Telecommunication",schoolAddress:"Nanjing, China.",id:2}],empHistory:[{id:1,start:"2019.1",end:"",title:"application developer",companyName:"JK Moving Service",jobDetail:[{des:"Launch the estimate email collect application from scratch.",id:1},{des:"creat, maintain and refactor company business layer web service api",id:2},{des:"participate in different type sprints involving projects like SSIS package, Xamarin development and Dynamic 365 plug-in",id:3}],techStack:"kendo ui+jquery+react, .net web api, Windows service (TopShelf), Microsoft Flow, Microsoft Dynamic 365 (on premise), SharePoint online."},{id:2,start:"2016.7",end:"2018.12",title:"Contracting Developer with Abilityone Commission",companyName:"Wemed Services Inc",jobDetail:[{des:"Support Agency Data Management System named Procurement List Information system",id:1},{des:"Build document approval process",id:2}],techStack:".net web form, Windows Workflow Foundation, XML + Soap web service"},{id:3,start:"2013.9",end:"2016.7",title:"Contracting Developer with SBA",companyName:"Dakota Consulting, Inc",jobDetail:[{des:"build investment data system for SBA, main functionalities include data collect, automate financial report and investment healthy analysis.",id:1}],techStack:".net web form, .net MVC, telerik control"}]},(l="state")in o?Object.defineProperty(o,l,{value:i,enumerable:!0,configurable:!0,writable:!0}):o[l]=i,n}var n,o,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&I(e,t)}(t,r["Component"]),n=t,(o=[{key:"render",value:function(){return a.a.createElement("div",null,a.a.createElement(i.Grid,null,a.a.createElement(i.Cell,{col:4,className:"resume-left-col"},a.a.createElement("div",{style:{textAlign:"center"}},a.a.createElement("img",{src:m.a,alt:"avatar",style:{height:"230px"}})),a.a.createElement("h2",{style:{paddingTop:"1em"}},"Yuan Yao"),a.a.createElement("h4",{style:{color:"grey"}},"full stack developer"),a.a.createElement("hr",{style:{borderTop:"3px solid #833fb2",width:"65%"}}),a.a.createElement("p",null,"Contact me ",a.a.createElement("i",{className:"fa fa-hand-o-right","aria-hidden":"true"}),a.a.createElement("a",{href:"mailto:yuanyaom@gmail.com"},"yuanyaom@gmail.com"),", if you are hiring a developer have enthusiasm in learning. I am always ready for new tech stack to build neat application."),a.a.createElement("hr",{style:{borderTop:"3px solid #833fb2",width:"65%"}}),a.a.createElement("h5",null,"Proven Skills"),a.a.createElement(O,{skillName:"c#/.Net",years:6}),a.a.createElement(O,{skillName:"MSSql",years:6}),a.a.createElement(O,{skillName:"Html/Css",years:5}),a.a.createElement(O,{skillName:"javascript",years:5}),a.a.createElement("hr",{style:{borderTop:"3px solid #833fb2",width:"65%"}}),a.a.createElement("h5",null,"Learning"),a.a.createElement("p",null,"react+redux | express+nodejs | no-sql | docker")),a.a.createElement(i.Cell,{col:8,className:"resume-right-col"},a.a.createElement("h2",null,"Experience"),a.a.createElement(j,{empHistory:this.state.empHistory[0]}),a.a.createElement(j,{empHistory:this.state.empHistory[1]}),a.a.createElement(j,{empHistory:this.state.empHistory[2]}),a.a.createElement("hr",{style:{borderTop:"3px solid #e22947"}}),a.a.createElement("h2",null,"Education"),a.a.createElement(N,{eduHistory:this.state.eduHistory[0]}),a.a.createElement(N,{eduHistory:this.state.eduHistory[1]}))))}}])&&_(n.prototype,o),l&&_(n,l),t}();function A(e){return(A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function M(e,t){return!t||"object"!==A(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function W(e){return(W=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function B(e,t){return(B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var F=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),M(this,W(t).apply(this,arguments))}var n,o,l;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&B(e,t)}(t,r["Component"]),n=t,(o=[{key:"render",value:function(){return a.a.createElement("div",{className:"contact-body"},a.a.createElement(i.Grid,{className:"contact-grid"},a.a.createElement(i.Cell,{col:6},a.a.createElement("h2",null,"Yuan Yao"),a.a.createElement("img",{src:m.a,alt:"avatar",style:{height:"250px"}}),a.a.createElement("p",{style:{width:"75%",margin:"auto",paddingTop:"1em"}},"Looking for full stack web developer job.")),a.a.createElement(i.Cell,{col:6},a.a.createElement("h2",null,"Contact Me"),a.a.createElement("hr",null),a.a.createElement("div",{className:"contact-list"},a.a.createElement(i.List,null,a.a.createElement(i.ListItem,null,a.a.createElement(i.ListItemContent,{style:{fontSize:"25px",fontFamily:"Anton"}},a.a.createElement("i",{className:"fa fa-phone-square","aria-hidden":"true"}),"(xxx) xxx-xxxx")),a.a.createElement(i.ListItem,null,a.a.createElement(i.ListItemContent,{style:{fontSize:"25px",fontFamily:"Anton"}},a.a.createElement("i",{className:"fa fa-envelope-square","aria-hidden":"true"}),"yuanyaom@gmail.com")))))))}}])&&L(n.prototype,o),l&&L(n,l),t}(),R=function(){return a.a.createElement(c.c,null,a.a.createElement(c.a,{exact:!0,path:"/",component:h}),a.a.createElement(c.a,{path:"/aboutme",component:b}),a.a.createElement(c.a,{path:"/projects",component:S}),a.a.createElement(c.a,{path:"/resume",component:D}),a.a.createElement(c.a,{path:"/contactme",component:F}))},q=n("55Ip");var G=function(){return a.a.createElement("div",{className:"demo-big-content"},a.a.createElement(i.Layout,null,a.a.createElement(i.Header,{className:"header-color",title:a.a.createElement(q.b,{style:{textDecoration:"none",color:"white"},to:"/"},"Home"),scroll:!0},a.a.createElement(i.Navigation,null,a.a.createElement(q.b,{to:"/"},"Home"),a.a.createElement(q.b,{to:"/projects"},"Projects"),a.a.createElement(q.b,{to:"/resume"},"Resume"),a.a.createElement(q.b,{to:"/contactme"},"Contact Me"))),a.a.createElement(i.Drawer,{title:a.a.createElement(q.b,{style:{textDecoration:"none",color:"white"},to:"/"},"Home")},a.a.createElement(i.Navigation,null,a.a.createElement(q.b,{to:"/"},"Home"),a.a.createElement(q.b,{to:"/projects"},"Projects"),a.a.createElement(q.b,{to:"/resume"},"Resume"),a.a.createElement(q.b,{to:"/contactme"},"Contact Me"))),a.a.createElement(i.Content,null,a.a.createElement("div",{className:"page-content"},a.a.createElement(R,null)))))};n("spug"),n("wBIO"),n("LECa");l.a.render(a.a.createElement(q.a,{basename:"/myportfolio"},a.a.createElement(G,null)),document.getElementById("root"))}},[["tjUo",1,2]]]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,